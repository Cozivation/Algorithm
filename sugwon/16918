#include <bits/stdc++.h>
using namespace std;
int r, c, n;
char MAP[201][201];
int dx[4] = { -1,1,0,0 };
int dy[4] = { 0,0,-1,1 };
queue<pair<int, int>> q;
void bomb() {
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			if (MAP[i][j] == '.') {
				MAP[i][j] = 'O';
			}
		}
	}
}
void bfs() {
	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;
		q.pop();
		MAP[x][y] = '.';
		for (int dir = 0; dir < 4; dir++) {
			int nx = x + dx[dir];
			int ny = y + dy[dir];
			if (nx < 0 || ny < 0 || nx >= r || ny >= c) continue;
			if (MAP[nx][ny] == '.') continue;
			MAP[nx][ny] = '.';
		}
	}

	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			if (MAP[i][j] == 'O') {
				q.push({ i,j });
			}
		}
	}
}
int main() {
	cin.tie(0);
	ios::sync_with_stdio(0);
	cin >> r >> c >> n;
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			cin >> MAP[i][j];
			if (MAP[i][j] == 'O') {
				q.push({ i,j });
			}
		}
	}

	for (int i = 2; i <= n; i++) {
		if (i % 2 == 0) {
			bomb();
		}
		else {
			bfs();
		}
	}

	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			cout << MAP[i][j];
		}
		cout << '\n';
	}
	return 0;
}
