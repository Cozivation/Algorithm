#include <bits/stdc++.h>
using namespace std;
char MAP[13][7];
int dx[4] = { -1,1,0,0 };
int dy[4] = { 0,0,-1,1 };
bool check[13][7];
vector<pair<int, int>> v, tmp_v;
int res;
int cnt;
bool flag;
void bfs(int a, int b) {
	queue<pair<int, int>> q;
	q.push({ a,b });
	v.push_back({ a,b });
	check[a][b] = true;

	while (!q.empty()) {
		int x = q.front().first;
		int y = q.front().second;
		char puyo = MAP[x][y];
		//cout << "puyo: " << puyo << '\n';
		q.pop();

		for (int dir = 0; dir < 4; dir++) {
			int nx = x + dx[dir];
			int ny = y + dy[dir];
			if (nx < 0 || ny < 0 || nx >= 12 || ny >= 6) continue;
			if (check[nx][ny] || MAP[nx][ny] != puyo) continue;
			//cout << "MAP[nx][ny]: " << MAP[nx][ny] << '\n';
			q.push({ nx,ny });
			check[nx][ny] = true;
			v.push_back({ nx,ny });
			cnt++;
		}
	}
}
int main() {
	cin.tie(0);
	ios::sync_with_stdio(0);
	for (int i = 0; i < 12; i++) {
		for (int j = 0; j < 6; j++) {
			cin >> MAP[i][j];
		}
	}

	while (1) {
		memset(check, false, sizeof(check));
		tmp_v.clear();
		flag = false;
		for (int i = 0; i < 12; i++) {
			for (int j = 0; j < 6; j++) {
				if (MAP[i][j] != '.' && check[i][j] == false) {
					cnt = 1;
					bfs(i, j);

					if (cnt >= 4) {
						flag = true;

						for (int k = 0; k < v.size(); k++) {
							tmp_v.push_back(v[k]);
						}
					}
					v.clear();
				}
			}
		}

		//cout << "cnt: " << cnt << '\n';

		for (int i = 0; i < tmp_v.size(); i++) {
			int x = tmp_v[i].first;
			int y = tmp_v[i].second;
			MAP[x][y] = '.';
		}


		for (int i = 0; i < 6; i++) {
			for (int j = 11; j > 0; j--) {
				if (MAP[j][i] == '.') {
					for (int k = j - 1; k >= 0; k--) {
						char tmp = MAP[k][i];
						if (tmp != '.') {
							MAP[j][i] = tmp;
							MAP[k][i] = '.';
							break;
						}
					}
				}
			}
		}
		if (flag) res++;
		else break;
	}
	cout << res;
	return 0;
}
